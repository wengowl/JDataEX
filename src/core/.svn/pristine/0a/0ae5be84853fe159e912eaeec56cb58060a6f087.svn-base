package org.jdataex.flow.component.step.xml;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.sql.SQLSyntaxErrorException;

import org.dom4j.DocumentException;
import org.jdataex.flow.component.step.dataaccess.RowDataAccess;
import org.jdataex.flow.row.Row;
import org.junit.Test;

public class XMLConverterTestorc {
	//数据格式不正确
	@Test(expected = IllegalArgumentException.class)
	public void testIllegalArgumentException() throws DocumentException, IOException{
		String path="test/org/jdataex/flow/component/step/xml/resource/数据格式不正确.xml";
				XMLConverter converter = new XMLConverter();
				Row row = converter.toRow(new File(path));
				RowDataAccess as=new RowDataAccess(null);
				as.doProcessRow(row);
	}
	//缺少标签
	@Test(expected = DocumentException.class)
	public void testDocumentException() throws DocumentException, IOException{
		String path="test/org/jdataex/flow/component/step/xml/resource/标签缺失.xml";
				XMLConverter converter = new XMLConverter();
				Row row = converter.toRow(new File(path));
				RowDataAccess as=new RowDataAccess(null);
				as.doProcessRow(row);
	}

	//无效数据字段
//	@Test(expected = SQLSyntaxErrorException.class)
//	public void testSQLSyntaxErrorException() throws SQLException,DocumentException, IOException{
//		
//		String path="test/org/jdataex/flow/component/step/xml/resource/无效字段.xml";
//		XMLConverter converter = new XMLConverter();
//		Row row = converter.toRow(new File(path));
//		RowDataAccess as=new RowDataAccess(null);
//		as.doProcessRow(row);
//					fail("aa");
//			
//	}
//	@Test
//	public void test2SQLSyntaxErrorException()throws SQLException{
//	
//	Throwable t = null;
//		try{
//			String path="test/org/jdataex/flow/component/step/xml/resource/无效字段.xml";
//			XMLConverter converter = new XMLConverter();
//			Row row = converter.toRow(new File(path));
//			RowDataAccess as=new RowDataAccess(null);
//			as.doProcessRow(row);
//			fail("aa");
//			
//		}catch(Exception ex){
//			
//			ex.printStackTrace();
//			t = ex;
//			
//			assertNotNull(t);
//			
//			SQLSyntaxErrorException e; 
//			assertTrue(ex instanceof SQLSyntaxErrorException);
//			assertTrue(ex.getMessage().contains("less than 15"));
//		}
//		
//		
//	}
	
	}
