package org.jdataex.flow.component.step.xml;

import static org.junit.Assert.assertEquals;

import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import java.util.Collection;

import org.dom4j.DocumentException;
import org.jdataex.flow.component.step.dataaccess.RowDataAccess;
import org.jdataex.flow.component.step.dataquery.DataQuery;
import org.jdataex.flow.row.IRow;
import org.jdataex.flow.row.Row;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import org.junit.runners.Parameterized.Parameters;

import ch.qos.logback.core.util.FileUtil;

@RunWith(Parameterized.class)
public class TestXMLConverter {

    @Parameters
    public static Collection prepareData()
    {	
        // 测试文件
    	
		 Object[][] objects={{"test/org/jdataex/flow/component/step/xml/resource/执行案件.xml","test/org/jdataex/flow/component/step/xml/resource/ts.xml",1231212423}};
		
         return Arrays.asList(objects);// 将数组转换成集合返回

    }
    private String xmlpath;
    private String  testpath;
    private int ajbs;
    public TestXMLConverter(String input, String expected,int ajbss)
    {
    	xmlpath  = input;
    	testpath   = expected;
    	ajbs=ajbss;
  
    }
	@AfterClass
	public static void tearDownAfterClass() throws Exception {
	}

	@Before
	public void setUp() throws Exception {
	}

	@After
	public void tearDown() throws Exception {
	}

	

	@Test
	public void test() throws DocumentException, IOException {
 System.err.println(xmlpath+"************"+testpath +"******************"+ajbs);
	
    	XMLConverter converter = new XMLConverter();
		Row row = converter.toRow(new File(xmlpath));
		
		RowDataAccess as=new RowDataAccess();
		as.doProcessRow(row);
	    DataQuery query = new DataQuery();
        IRow row1 = query.getAllSP("执行案件",ajbs);
        XMLConverter converter1 = new XMLConverter();
        converter1.fromRow(row1, new File(testpath));
       
		IRow irow = converter.toRow(new File(xmlpath));
		String actual = irow.toString();
		
		IRow irow1 = converter.toRow(new File(testpath));
		 System.err.println(xmlpath+"************"+testpath +"******************"+ajbs);
		String actual1 = irow1.toString();
		assertEquals(actual1, actual);
		
	}

}
