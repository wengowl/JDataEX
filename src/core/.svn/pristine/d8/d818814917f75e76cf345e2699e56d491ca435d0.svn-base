package org.jdataex.flow.component.step.dataaccess;

import org.apache.commons.dbutils.QueryRunner;
import org.apache.commons.dbutils.handlers.MapListHandler;
import org.dom4j.DocumentException;
import org.jdataex.flow.component.step.xml.XMLConverter;
import org.jdataex.flow.row.*;
import org.jdataex.resource.databasepool.DBManager;
import org.jdataex.resource.databasepool.ShutDownPool;
import org.jdataex.util.AssertUtil;
import org.jdataex.util.FileUtil;
import org.junit.*;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;

import java.io.File;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Savepoint;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.*;

import static org.junit.Assert.*;

public class RowDataAccessTest {
    private static Connection conn;
    private static QueryRunner queryRunner;

    private String[] handlerTables = { "MSYS_SKSQK", "MSYS_SDJL", "MSYS_SFJY",
            "MSYS_XAQK" };

    @BeforeClass
    public static void setUpBeforeClass() throws Exception {
        conn = DBManager.getInstance().getConnection("pool");
        queryRunner = new QueryRunner(true);
    }
    @Before
    public void setUp() throws SQLException {
        clearTables();
    }
    private void clearTables() throws SQLException {
        for (int i = 0; i < handlerTables.length; i++) {
            queryRunner.update(conn, "DELETE FROM " + handlerTables[i]);
        }
    }

    @Test
    public void testDoProcessRowinsert() throws Exception {
        XMLConverter xmlConverter = new XMLConverter();

        try {
            IRow row=xmlConverter.toRow(new File("test/org/jdataex/flow/component/step/dataaccess/民事一审.xml"));
            RowDataAccess rowDataAccess= new RowDataAccess(null);
            rowDataAccess.doProcessRow(row);

        } catch (DocumentException e) {
            e.printStackTrace();
        }
        List<Map<String, Object>> expectedList = new ArrayList<>();
        Map<String, Object> expectedMap = new HashMap<>();
        expectedList.add(expectedMap);
        List<Map<String, Object>> actualList;

        expectedMap.clear();
        expectedMap.put("SSFW", "1");
        expectedMap.put("SSLX", "1");
        actualList = query("SELECT SSFW,SSLX FROM MSYS_SKSQK");

        AssertUtil.assertData(expectedList, actualList);

        expectedMap.clear();
        expectedMap.put("XH", "1");
        expectedMap.put("WS", "1");
        expectedMap.put("WSDYY", "未送达原因");
        expectedMap.put("GGRQ", "2014-06-09 00:00:00.0");
        expectedMap.put("QSSJ", "2014-06-09 12:12:12.0");
        actualList = query("SELECT XH,WS,WSDYY,GGRQ,QSSJ FROM MSYS_SDJL");

        AssertUtil.assertData(expectedList, actualList);

        expectedMap.clear();
        expectedMap.put("SQXARQ", "2014-06-09 00:00:00.0");
        expectedMap.put("XASY", "1");
        expectedMap.put("XAYY", "销案具体原因");
        expectedMap.put("SQXABG", "1");
        expectedMap.put("TYXARQ", "2014-06-09 00:00:00.0");
        expectedMap.put("SPR", "1");
        actualList = query("SELECT SQXARQ,XASY,XAYY,SQXABG,TYXARQ,SPR FROM MSYS_XAQK");

        AssertUtil.assertData(expectedList, actualList);

        expectedMap.clear();
        expectedMap.put("XH", "1");
        expectedMap.put("TCRQ", "2014-06-09 00:00:00.0");
        expectedMap.put("FKRQ", "2014-06-09 00:00:00.0");

      /*  Map<String, Object> expectedMap2 = new HashMap<>();
        expectedMap2.clear();
        expectedMap2.put("XH", "1");
        expectedMap2.put("TCRQ", "2014-06-09 00:00:00.0");
        expectedMap2.put("FKRQ", "2014-06-09 00:00:00.0");
        expectedList.add(expectedMap2);*/

    }
    @Test
    public void testDoProcessRowDelete() throws SQLException {
        XMLConverter xmlConverter = new XMLConverter();
        try {
            IRow row=xmlConverter.toRow(new File("test/org/jdataex/flow/component/step/dataaccess/民事一审.xml"));
            RowDataAccess rowDataAccess= new RowDataAccess(null);
            rowDataAccess.doProcessRow(row);

        } catch (DocumentException e) {
            e.printStackTrace();
        }
        List<Map<String, Object>> expectedList = new ArrayList<>();

        List<Map<String, Object>> actualList;
        actualList = query("SELECT XH,TCRQ,FKRQ FROM MSYS_SFJY");

        Map<String, Object> expectedMap2 = new HashMap<>();
        expectedList.add(expectedMap2);
        expectedMap2.clear();
        expectedMap2.put("XH", "1");
        expectedMap2.put("TCRQ", "2014-06-09 00:00:00.0");
        expectedMap2.put("FKRQ", "2014-06-09 00:00:00.0");

        AssertUtil.assertData(expectedList, actualList);

        try {
            IRow row=xmlConverter.toRow(new File("test/org/jdataex/flow/component/step/dataaccess/民事一审_delete.xml"));
            RowDataAccess rowDataAccess= new RowDataAccess(null);
            rowDataAccess.doProcessRow(row);

        } catch (DocumentException e) {
            e.printStackTrace();
        }
        assertEquals(0 ,queryRunner.update(conn, "select * from MSYS_SDJL"));
        assertEquals(0 ,queryRunner.update(conn, "select * from MSYS_SKSQK"));

    }
    @Test
    public void testDoProcessRowDeleteOnlyAJBS() throws SQLException {
        XMLConverter xmlConverter = new XMLConverter();
        try {
            IRow row=xmlConverter.toRow(new File("test/org/jdataex/flow/component/step/dataaccess/民事一审.xml"));
            RowDataAccess rowDataAccess= new RowDataAccess(null);
            rowDataAccess.doProcessRow(row);

        } catch (DocumentException e) {
            e.printStackTrace();
        }
        List<Map<String, Object>> expectedList = new ArrayList<>();

        List<Map<String, Object>> actualList;
        actualList = query("SELECT XH,TCRQ,FKRQ FROM MSYS_SFJY");
        Map<String, Object> expectedMap2 = new HashMap<>();
        expectedMap2.clear();
        expectedMap2.put("XH", "1");
        expectedMap2.put("TCRQ", "2014-06-09 00:00:00.0");
        expectedMap2.put("FKRQ", "2014-06-09 00:00:00.0");
        expectedList.add(expectedMap2);
        AssertUtil.assertData(expectedList, actualList);

        try {
            IRow row=xmlConverter.toRow(new File("test/org/jdataex/flow/component/step/dataaccess/民事一审_delete_onlyAJBS.xml"));
            RowDataAccess rowDataAccess= new RowDataAccess(null);
            rowDataAccess.doProcessRow(row);

        } catch (DocumentException e) {
            e.printStackTrace();
        }
        assertEquals(0 ,queryRunner.update(conn, "select * from MSYS_SDJL"));
        assertEquals(0 ,queryRunner.update(conn, "select * from MSYS_SKSQK"));
    }

    private List<Map<String, Object>> query(String sql) throws SQLException {
        return queryRunner.query(conn, sql, new MapListHandler(), (Object[]) null);
    }

}