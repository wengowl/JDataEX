package org.jdataex.flow.handler;

import org.jdataex.core.InitializationException;
import org.jdataex.core.ReleaseException;
import org.jdataex.flow.component.ComponentException;
import org.jdataex.flow.component.step.BaseStep;
import org.jdataex.flow.row.IRow;

public class MockStep extends BaseStep {

	private int count = 0;
	
	@Override
	public void beforeStep() {
		System.out.println("beforeStep" + count);
	}

	@Override
	public void afterStep() {
		System.out.println("afterStep" + count);
	}

	@Override
	public void beforeProcess() {
		System.out.println("beforeProcess" + count);
	}

	@Override
	public void afterProcess() {
		System.out.println("afterProcess" + count);
	}

	@Override
	public void beginRowSet() {
		System.out.println("beforeRowSet" + count);
	}

	@Override
	public void commitRowSet() {
		System.out.println("commitRowSet" + count);
	}

	@Override
	public void beginRow(IRow row) {
		System.out.println("beforeRow" + count);
	}

	@Override
	public void commitRow(IRow row) {
		System.out.println("commitRow" + count);
	}

	@Override
	public void init() throws InitializationException {
		System.out.println("init");
		
	}

	@Override
	public void release() throws ReleaseException {
		System.out.println("release");
	}

	@Override
	public void processRow(IRow row) throws ComponentException {
		System.out.println("processRow" + count++);
	}

	@Override
	public void rollbackRowSet() throws ComponentException {
		System.out.println("rollbackRowSet" + count);
	}

	@Override
	public void rollbackRow(IRow row) throws ComponentException {
		System.out.println("rollbackRow" + count);
	}

}
