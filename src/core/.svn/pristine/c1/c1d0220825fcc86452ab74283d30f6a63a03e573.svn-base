package org.jdataex.flow.component.trigger;

import org.jdataex.flow.component.dataaccess.AutoDataAccess;
import org.jdataex.flow.row.*;
import org.jdataex.resource.databasepool.DBManager;
import org.jdataex.resource.databasepool.ShutDownPool;

/**
 * Created by wengxf on 14-4-28.
 */
public class Test {
    public void cont(int i) {
        i = 0;
    }

    public static void main(String[] args) {
      /*  List<String> servicelist = new ArrayList<>();

        for (int i = 0; i < 1002; i++) {
            servicelist.add(" service " + i);
        }
        int count = (int) Math.round((float) servicelist.size() / 5.0);*/
       /* TriggerCreateThread thread1 = new TriggerCreateThread(0, count, servicelist);
        TriggerCreateThread thread2 = new TriggerCreateThread(count, count * 2, servicelist);
        TriggerCreateThread thread3 = new TriggerCreateThread(2 * count, 3 * count, servicelist);
        TriggerCreateThread thread4 = new TriggerCreateThread(3 * count, 4 * count, servicelist);
        TriggerCreateThread thread5 = new TriggerCreateThread(4 * count, servicelist.size(), servicelist);
        new Thread(thread1, "Thread 1 ").start();
        new Thread(thread2, "Thread 2 ").start();
        new Thread(thread3, "Thread 3 ").start();
        new Thread(thread4, "Thread 4 ").start();
        new Thread(thread5, "Thread 5 ").start();
*/

  /*      List<String> serviceList = new ArrayList<>();
        List<TriggerDataBean> triggerDataBeanList = new ArrayList<>();  //映射关系列表
        List<String> table = new ArrayList<>();
        ExcelConfigLoad load = new ExcelConfigLoad();
        load.createConfig("F:\\公司\\四川高院\\xxx.xls", "F:\\公司\\四川高院\\xxxxxx.xls");
        load.deleteConfig("F:\\公司\\四川高院\\xxx.xls", "F:\\公司\\四川高院\\xxxxxx.xls");
        load.updateConfig("F:\\公司\\四川高院\\xxx.xls", "F:\\公司\\四川高院\\xxxxxx.xls");
*/
         /*   List<String> exchanges = new ArrayList<>();
            exchanges.add("a+b");
            TriggerDataBean triggerDataBean = new TriggerDataBean();
            triggerDataBean.setExchanges(exchanges);
            List<String> field = new ArrayList<>();
            field.add("a");
            field.add("b");
            Map<String, Object > sourcevalue = new HashMap<>();
            sourcevalue.put("a",1);
            sourcevalue.put("b",2);
           triggerDataBean.setSourcevalue(sourcevalue);
           triggerDataBean.setField(field);
           String ex= "a+b";

        String result =  AviatorEvaluator.execute(ex, triggerDataBean.getSourcevalue()).toString();
        System.out.println(result);*/

        // TriggerComponent triggerComponent = new TriggerComponent("F:\\公司\\四川高院\\",10,10,"sybase");
        // triggerComponent.configHandler();
        // int a = Math.round((float)1/(float)10);

        /*double a =  (double)1/(double)10;
        System.out.println(Math.ceil(a));*/
//        ColumnType columnType = ColumnType.STRING;
//        String s= columnType.getName();
//        System.out.println(s);
//
//        int i =1;
//        Test test = new Test();
//        test.cont(i);
//         System.out.println(i);
        DBManager.setPath("config/dsconfig.xml");
        TriggerComponent triggerComponent = new TriggerComponent("F:\\公司\\四川高院\\",10,10,"sybase");
       triggerComponent.configHandler();
        RowSet rowSet = new RowSet();
        for (int b = 0; b < 5; b++) {
            IRow row = new Row();
            for (int a = 0; a < 5; a++) {
                IColumn column = new Column("id"+(a+1), 2, ColumnType.INT);
                row.insertColumn(column);

            }
            IRowHeader rowHeader = new RowHeader();
            rowHeader.put("tablename", "test" + b);
            rowHeader.put("operation", "insert");
            row.setHeader(rowHeader);
            rowSet.putRow(row);
        }
        AutoDataAccess autoDataAccess = new AutoDataAccess();
        autoDataAccess.processRowset(rowSet);
        Runtime.getRuntime().addShutdownHook(new ShutDownPool());

        //  DBManager.close();
//        String sql = "insert into test (id) values(?)";
//        String sql1 = "select * from login_log";
//        DBOperation dbOperation =new DBOperation();
//        Object[] objects = {1};
//        int a=0;
//        int[] types ={Types.INTEGER};
//        try {
//          a=  dbOperation.sqlUpdate(sql,objects, types);
//        } catch (SQLException e) {
//            e.printStackTrace();
//        }
//        ResultSet resultSet= dbOperation.sqlQuery(sql1);
//        try {
//            while(resultSet.next())
//            System.out.println(a+resultSet.getString(1));
//        } catch (SQLException e) {
//            e.printStackTrace();
//        }

/*

        try {
            Class.forName("com.sybase.jdbc4.jdbc.SybDriver").newInstance();
        } catch (InstantiationException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }

        String url="jdbc:sybase:Tds:10.10.22.21:5000/test";

        String user="datatest";

        String password="datatest";
        Connection conn = null;
        try {
             conn= DriverManager.getConnection(url, user, password);
            String sql = "select * from test0";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            ResultSet resultSet = preparedStatement.executeQuery();
            while (resultSet.next())
                System.out.println("result" + resultSet.getString(1));
            resultSet.close();
            preparedStatement.close();
           // conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                conn.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
*/
        /*Vector<Integer> a =null;
        a = new Vector<>();
        a.addElement(1);
        a.addElement(1);
        Enumeration enumeration = a.elements();
        while(enumeration.hasMoreElements()){
            int b = (int)enumeration.nextElement();
                System.out.println();
            a.removeElement(b);
            System.out.println("Size a "+a.size());
        }  */

    }


}
