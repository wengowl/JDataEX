package org.jdataex.resource.databasepool;


import java.sql.SQLException;
import java.util.*;

/**
 * Created by wengxf on 14-4-22.
 */
public class DBManager {
   // private  BasePoolConnection conn;
  //  private ConnectionPool connectionPool;
    private static DBManager inst;
    private static List<ConfigDatabasePoolBean> poolList= new ArrayList<>();
    private static Hashtable pools=new Hashtable();//连接池
    private Vector poolconfig  = new Vector();//连接池配置信息
    private static String path;

    /**
        *关闭连接池
        */

    public  void close() {
        for (int i=0;i< poolList.size();i++) {
            ConfigDatabasePoolBean configDatabasePool = poolList.get(i);
            ConnectionPool connectionPool=(ConnectionPool) pools.get(configDatabasePool.getPoolname());
            try {
                //connectionPool.refreshConnections();
                connectionPool.closeConnectionPool();
            } catch (SQLException e) {
                // TODO Auto-generated catch block
                e.printStackTrace();
            }
        }
    }

    public  DBManager() {
        this.init();
        //this.inst
    }
    public static synchronized  DBManager getInstance()
    {
        if(inst==null)
        {
            inst=new DBManager();
        }
        return inst;

    }
    private void init() {
        this.loadConfig();
        System.out.println("poollistsize  "+poolList.size());
        for (int i=0;i< poolList.size();i++) {
            ConfigDatabasePoolBean configDatabasePool = poolList.get(i);
            //初始化连接池
            ConnectionPool connectionPool= new ConnectionPool(configDatabasePool.getJdbcDriver(), configDatabasePool.getDbUrl(), configDatabasePool.getDbUsername(), configDatabasePool.getDbPassword(), configDatabasePool.getPoolname(), configDatabasePool.getInitConnections(), configDatabasePool.getIncrConnections(), configDatabasePool.getMaxConnections());
            //connectionPool = new ConnectionPool("oracle.jdbc.driver.OracleDriver","jdbc:oracle:thin:@192.168.54.220:1521:ORCL","fwgl","fwgl") ;
            //connectionPool = new ConnectionPool("com.sybase.jdbc4.jdbc.SybDriver","jdbc:sybase:Tds:10.10.22.21:5000/test","datatest","datatest");
            //connectionPool = new ConnectionPool("net.sourceforge.jtds.jdbc.Driver","jdbc:jtds:sybase://10.10.22.21:5000/test","datatest","datatest");
//            try {
//                connectionPool.createPool();
//
//
//            } catch (Exception e) {
//                // TODO Auto-generated catch block
//                e.printStackTrace();
//            }
            pools.put(configDatabasePool.getPoolname(),connectionPool);
        }
    }

    public  int getConnectionsSize(String poolname){
         ConnectionPool connectionPool =  null;
         if(poolname==null){
             connectionPool =  (ConnectionPool) pools.get(poolList.get(0).getPoolname());
         }else {
             connectionPool = (ConnectionPool) pools.get(poolname);
         }
                return connectionPool.getConnectionsSize();
     }
    public  BasePoolConnection getConnection(String poolname) {
        if (inst == null)
            new DBManager();
        BasePoolConnection conn = null;
        try {
             ConnectionPool connectionPool =  null;
            if(poolname==null){
                connectionPool =  (ConnectionPool) pools.get(poolList.get(0).getPoolname());
            }else {
              connectionPool = (ConnectionPool) pools.get(poolname);
            }
            conn = connectionPool.getConnection();
           // connectionPool.releaseConnections();
              conn.setAutoCommit(true);
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        return conn;
    }
    public  void refreshConnection(String poolname) {
        if (inst == null)
            new DBManager();

        try {
            ConnectionPool connectionPool = (ConnectionPool) pools.get(poolname);
            //conn = connectionPool.getConnection();
            connectionPool.refreshConnections();

        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
    private void loadConfig(){
        ParseDSConfig pd=new ParseDSConfig();
        System.out.println("加载连接池配置文件");
         poolconfig= pd.readConfigInfo(path);
        Iterator allpoolconfig=poolconfig.iterator();
        while(allpoolconfig.hasNext())
        {
            poolList.add((ConfigDatabasePoolBean) allpoolconfig.next());
            System.out.println("加载连接池。。。"+poolList.get(0).getPoolname());

        }

    }

    public static void setPath(String path) {
        DBManager.path = path;
    }

    public static void main(String[] args) {
//        String sql = "select * from login_log";
//        ResultSet rs;
//        BasePoolConnection conn = null;
//        BasePoolConnection conn2 = null;
//        BasePoolConnection conn3 = null;
//        BasePoolConnection conn4 = null;
//        BasePoolConnection conn5 = null;
//        BasePoolConnection conn6 = null;
//        BasePoolConnection conn7 = null;
//
//
//        try {
//            conn = DBManager.getConnection();
//            conn2 = DBManager.getConnection();
//            conn3 = DBManager.getConnection();
//            conn4 = DBManager.getConnection();
//
//            rs = conn.executeQuery(sql);
//
//            if (rs.next())
//              System.out.println(rs.getInt(1));
//
//        } catch (SQLException e) {
//            // TODO Auto-generated catch block
//            e.printStackTrace();
//        } finally {
//            if (conn != null) {
//                conn.close();
//            }
//        }
//
//        conn5 = DBManager.getConnection();
//        conn6 = DBManager.getConnection();
//        conn7 = DBManager.getConnection();
//
//    }


    }

}

